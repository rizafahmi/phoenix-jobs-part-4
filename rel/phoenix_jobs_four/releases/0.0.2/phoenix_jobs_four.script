%% script generated at {2014,11,28} {5,13,50}
{script,
    {"phoenix_jobs_four","0.0.2"},
    [{preLoaded,
         [erl_prim_loader,erlang,erts_internal,init,otp_ring0,prim_eval,
          prim_file,prim_inet,prim_zip,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-3.0.3/ebin","$ROOT/lib/stdlib-2.2/ebin"]},
     {primLoad,[error_handler]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-3.0.3/ebin"]},
     {primLoad,
         [application,application_controller,application_master,
          application_starter,auth,code,code_server,disk_log,disk_log_1,
          disk_log_server,disk_log_sup,dist_ac,dist_util,erl_boot_server,
          erl_ddll,erl_distribution,erl_epmd,erl_reply,error_logger,
          erts_debug,file,file_io_server,file_server,gen_sctp,gen_tcp,gen_udp,
          global,global_group,global_search,group,heart,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel,kernel_config,net,
          net_adm,net_kernel,os,pg2,ram_file,rpc,seq_trace,standard_error,
          user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-2.2/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v8,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_expand,epp,erl_bits,erl_compile,erl_eval,erl_expand_records,
          erl_internal,erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,ets,
          eval_bits,file_sorter,filelib,filename,gb_sets,gb_trees,gen,
          gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,io_lib_fread,
          io_lib_pretty,lib,lists,log_mf_h,maps,math,ms_transform,orddict,
          ordsets,otp_internal,pg,pool,proc_lib,proplists,qlc,qlc_pt,queue,
          random,re,sets,shell,shell_default,slave,sofs,string,supervisor,
          supervisor_bridge,sys,timer,unicode,win32reg,zip]},
     {path,["$ROOT/lib/compiler-5.0.2/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bool,beam_bsm,beam_clean,beam_dead,
          beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_split,
          beam_trim,beam_type,beam_utils,beam_validator,beam_z,cerl,
          cerl_clauses,cerl_inline,cerl_trees,compile,core_lib,core_lint,
          core_parse,core_pp,core_scan,erl_bifs,rec_env,sys_core_dsetel,
          sys_core_fold,sys_core_inline,sys_pre_attributes,sys_pre_expand,
          v3_codegen,v3_core,v3_kernel,v3_kernel_pp,v3_life]},
     {path,["$ROOT/lib/syntax_tools-1.6.16/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,erl_tidy,igor,prettypr]},
     {path,["$ROOT/lib/poolboy-1.2.1/ebin"]},
     {primLoad,[poolboy,poolboy_sup,poolboy_worker]},
     {path,["$ROOT/lib/ranch-1.0.0/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_listener_sup,ranch_protocol,ranch_server,ranch_ssl,ranch_sup,
          ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/crypto-3.4.1/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/cowlib-1.0.0/ebin"]},
     {primLoad,
         [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,cow_mimetypes,
          cow_multipart,cow_qs,cow_spdy]},
     {path,["$ROOT/lib/elixir-1.1.0-dev/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Access.Atom','Elixir.Access.HashDict',
          'Elixir.Access.List','Elixir.Access.Map','Elixir.Agent',
          'Elixir.Agent.Server','Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadFunctionError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.CaseClauseError',
          'Elixir.Code','Elixir.Code.LoadError','Elixir.Collectable',
          'Elixir.Collectable.BitString','Elixir.Collectable.File.Stream',
          'Elixir.Collectable.HashDict','Elixir.Collectable.HashSet',
          'Elixir.Collectable.IO.Stream','Elixir.Collectable.List',
          'Elixir.Collectable.Map','Elixir.CompileError',
          'Elixir.CondClauseError','Elixir.Dict','Elixir.Enum',
          'Elixir.Enum.EmptyError','Elixir.Enum.OutOfBoundsError',
          'Elixir.Enumerable','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.Range',
          'Elixir.Enumerable.Stream','Elixir.ErlangError','Elixir.Exception',
          'Elixir.File','Elixir.File.CopyError','Elixir.File.Error',
          'Elixir.File.Stat','Elixir.File.Stream','Elixir.Float',
          'Elixir.FunctionClauseError','Elixir.GenEvent',
          'Elixir.GenEvent.Stream','Elixir.GenServer','Elixir.HashDict',
          'Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
          'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
          'Elixir.Inspect.List','Elixir.Inspect.Map','Elixir.Inspect.Opts',
          'Elixir.Inspect.PID','Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Tuple',
          'Elixir.Inspect.Version','Elixir.Inspect.Version.Requirement',
          'Elixir.Integer','Elixir.Kernel','Elixir.Kernel.CLI',
          'Elixir.Kernel.ErrorHandler','Elixir.Kernel.LexicalTracker',
          'Elixir.Kernel.ParallelCompiler','Elixir.Kernel.ParallelRequire',
          'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
          'Elixir.KeyError','Elixir.Keyword','Elixir.List',
          'Elixir.List.Chars','Elixir.List.Chars.Atom',
          'Elixir.List.Chars.BitString','Elixir.List.Chars.Float',
          'Elixir.List.Chars.Integer','Elixir.List.Chars.List','Elixir.Macro',
          'Elixir.Macro.Env','Elixir.Map','Elixir.MatchError','Elixir.Module',
          'Elixir.Module.LocalsTracker','Elixir.Node','Elixir.OptionParser',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Range.Iterator','Elixir.Range.Iterator.Integer',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.RuntimeError','Elixir.Set',
          'Elixir.Stream','Elixir.Stream.Reducers','Elixir.String',
          'Elixir.String.Chars','Elixir.String.Chars.Atom',
          'Elixir.String.Chars.BitString','Elixir.String.Chars.Float',
          'Elixir.String.Chars.Integer','Elixir.String.Chars.List',
          'Elixir.String.Chars.URI','Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement','Elixir.String.Graphemes',
          'Elixir.String.Unicode','Elixir.StringIO','Elixir.Supervisor',
          'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
          'Elixir.SyntaxError','Elixir.System','Elixir.SystemLimitError',
          'Elixir.Task','Elixir.Task.Supervised','Elixir.Task.Supervisor',
          'Elixir.TokenMissingError','Elixir.TryClauseError','Elixir.Tuple',
          'Elixir.URI','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Parser.DSL','Elixir.Version.Requirement',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_counter,elixir_def,
          elixir_def_defaults,elixir_def_overridable,elixir_dispatch,
          elixir_env,elixir_errors,elixir_exp,elixir_exp_clauses,elixir_fn,
          elixir_for,elixir_import,elixir_interpolation,elixir_lexical,
          elixir_locals,elixir_map,elixir_module,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_scope,elixir_sup,elixir_tokenizer,
          elixir_translator,elixir_try,elixir_utils]},
     {path,["$ROOT/lib/decimal-0.2.5/ebin"]},
     {primLoad,
         ['Elixir.Decimal','Elixir.Decimal.Context','Elixir.Decimal.Error',
          'Elixir.Inspect.Decimal','Elixir.String.Chars.Decimal']},
     {path,["$ROOT/lib/linguist-0.1.2/ebin"]},
     {primLoad,
         ['Elixir.Linguist','Elixir.Linguist.Compiler',
          'Elixir.Linguist.NoTranslationError','Elixir.Linguist.Vocabulary']},
     {path,["$ROOT/lib/poison-1.1.1/ebin"]},
     {primLoad,
         ['Elixir.Poison','Elixir.Poison.Decode','Elixir.Poison.Decoder',
          'Elixir.Poison.Decoder.Any','Elixir.Poison.Encode',
          'Elixir.Poison.EncodeError','Elixir.Poison.Encoder',
          'Elixir.Poison.Encoder.Any','Elixir.Poison.Encoder.Atom',
          'Elixir.Poison.Encoder.BitString','Elixir.Poison.Encoder.Float',
          'Elixir.Poison.Encoder.HashDict','Elixir.Poison.Encoder.HashSet',
          'Elixir.Poison.Encoder.Integer','Elixir.Poison.Encoder.List',
          'Elixir.Poison.Encoder.Map','Elixir.Poison.Encoder.Range',
          'Elixir.Poison.Encoder.Stream','Elixir.Poison.Parser',
          'Elixir.Poison.SyntaxError']},
     {path,["$ROOT/lib/cowboy-1.0.0/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_clock,cowboy_handler,
          cowboy_http,cowboy_http_handler,cowboy_loop_handler,
          cowboy_middleware,cowboy_protocol,cowboy_req,cowboy_rest,
          cowboy_router,cowboy_spdy,cowboy_static,cowboy_sub_protocol,
          cowboy_sup,cowboy_websocket,cowboy_websocket_handler]},
     {path,["$ROOT/lib/logger-1.1.0-dev/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.Backends.Console','Elixir.Logger.Config',
          'Elixir.Logger.ErrorHandler','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,["$ROOT/lib/postgrex-0.6.0/ebin"]},
     {primLoad,
         ['Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Connection',
          'Elixir.Postgrex.Error','Elixir.Postgrex.Protocol',
          'Elixir.Postgrex.Protocol.Messages','Elixir.Postgrex.Result',
          'Elixir.Postgrex.TypeInfo','Elixir.Postgrex.Types']},
     {path,["$ROOT/lib/plug-0.7.0/ebin"]},
     {primLoad,
         ['Elixir.Access.Plug.Conn.Unfetched','Elixir.Plug',
          'Elixir.Plug.Adapters.Cowboy','Elixir.Plug.Adapters.Cowboy.Conn',
          'Elixir.Plug.Adapters.Cowboy.Handler',
          'Elixir.Plug.Adapters.Test.Conn','Elixir.Plug.Builder',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
          'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
          'Elixir.Plug.Exception.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Exception.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.Head','Elixir.Plug.Logger','Elixir.Plug.MIME',
          'Elixir.Plug.MessageVerifier','Elixir.Plug.MethodOverride',
          'Elixir.Plug.Parsers','Elixir.Plug.Parsers.MULTIPART',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.Router','Elixir.Plug.Router.InvalidSpecError',
          'Elixir.Plug.Router.Utils','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static','Elixir.Plug.Test',
          'Elixir.Plug.Upload']},
     {path,["$ROOT/lib/ecto-0.2.5/ebin"]},
     {primLoad,
         ['Elixir.Ecto.Adapter','Elixir.Ecto.Adapter.Migrations',
          'Elixir.Ecto.Adapter.Storage',
          'Elixir.Ecto.Adapter.TestTransactions',
          'Elixir.Ecto.Adapter.Transactions','Elixir.Ecto.Adapters.Postgres',
          'Elixir.Ecto.Adapters.Postgres.SQL',
          'Elixir.Ecto.Adapters.Postgres.Worker',
          'Elixir.Ecto.AssociationNotLoadedError','Elixir.Ecto.Associations',
          'Elixir.Ecto.Associations.Assoc',
          'Elixir.Ecto.Associations.BelongsTo',
          'Elixir.Ecto.Associations.BelongsTo.Proxy',
          'Elixir.Ecto.Associations.HasMany',
          'Elixir.Ecto.Associations.HasMany.Proxy',
          'Elixir.Ecto.Associations.HasOne',
          'Elixir.Ecto.Associations.HasOne.Proxy',
          'Elixir.Ecto.Associations.Preloader','Elixir.Ecto.Date',
          'Elixir.Ecto.DateTime','Elixir.Ecto.Interval',
          'Elixir.Ecto.InvalidModel','Elixir.Ecto.InvalidURL',
          'Elixir.Ecto.Migration','Elixir.Ecto.MigrationError',
          'Elixir.Ecto.Migrator','Elixir.Ecto.Model',
          'Elixir.Ecto.Model.Schema','Elixir.Ecto.Model.Validations',
          'Elixir.Ecto.NoPrimaryKey','Elixir.Ecto.NotSingleResult',
          'Elixir.Ecto.Query','Elixir.Ecto.Query.API',
          'Elixir.Ecto.Query.Builder','Elixir.Ecto.Query.Builder.Distinct',
          'Elixir.Ecto.Query.Builder.From',
          'Elixir.Ecto.Query.Builder.GroupBy',
          'Elixir.Ecto.Query.Builder.Having','Elixir.Ecto.Query.Builder.Join',
          'Elixir.Ecto.Query.Builder.LimitOffset',
          'Elixir.Ecto.Query.Builder.Lock',
          'Elixir.Ecto.Query.Builder.OrderBy',
          'Elixir.Ecto.Query.Builder.Preload',
          'Elixir.Ecto.Query.Builder.Select',
          'Elixir.Ecto.Query.Builder.Where','Elixir.Ecto.Query.JoinExpr',
          'Elixir.Ecto.Query.Normalizer','Elixir.Ecto.Query.QueryExpr',
          'Elixir.Ecto.Query.TypeCheckError','Elixir.Ecto.Query.Typespec',
          'Elixir.Ecto.Query.Util','Elixir.Ecto.Query.Validator',
          'Elixir.Ecto.QueryError','Elixir.Ecto.Queryable',
          'Elixir.Ecto.Queryable.Atom','Elixir.Ecto.Queryable.BitString',
          'Elixir.Ecto.Queryable.Ecto.Query','Elixir.Ecto.Queryable.Tuple',
          'Elixir.Ecto.Reflections.BelongsTo',
          'Elixir.Ecto.Reflections.HasMany','Elixir.Ecto.Reflections.HasOne',
          'Elixir.Ecto.Repo','Elixir.Ecto.Repo.Backend','Elixir.Ecto.Storage',
          'Elixir.Ecto.Tagged','Elixir.Ecto.Time','Elixir.Ecto.Utils',
          'Elixir.Ecto.Validator','Elixir.Ecto.Validator.Predicates',
          'Elixir.Enumerable.Ecto.Associations.HasMany',
          'Elixir.Inspect.Ecto.Associations.BelongsTo',
          'Elixir.Inspect.Ecto.Associations.HasMany',
          'Elixir.Inspect.Ecto.Associations.HasOne','Elixir.Mix.Tasks.Ecto',
          'Elixir.Mix.Tasks.Ecto.Create','Elixir.Mix.Tasks.Ecto.Drop',
          'Elixir.Mix.Tasks.Ecto.Gen.Migration',
          'Elixir.Mix.Tasks.Ecto.Gen.Repo','Elixir.Mix.Tasks.Ecto.Migrate',
          'Elixir.Mix.Tasks.Ecto.Rollback']},
     {path,["$ROOT/lib/phoenix-0.4.1/ebin"]},
     {primLoad,
         ['Elixir.Access.Phoenix.Socket','Elixir.Mix.Tasks.Phoenix',
          'Elixir.Mix.Tasks.Phoenix.New','Elixir.Mix.Tasks.Phoenix.Routes',
          'Elixir.Mix.Tasks.Phoenix.Start','Elixir.Phoenix',
          'Elixir.Phoenix.Adapters.Cowboy','Elixir.Phoenix.Channel',
          'Elixir.Phoenix.CodeReloader','Elixir.Phoenix.Config',
          'Elixir.Phoenix.Config.UndefinedConfigError',
          'Elixir.Phoenix.Controller','Elixir.Phoenix.Controller.Action',
          'Elixir.Phoenix.Controller.Connection',
          'Elixir.Phoenix.Controller.ErrorController',
          'Elixir.Phoenix.Controller.Errors',
          'Elixir.Phoenix.Controller.Errors.UnfetchedContentType',
          'Elixir.Phoenix.Controller.Flash','Elixir.Phoenix.Html',
          'Elixir.Phoenix.Html.Engine','Elixir.Phoenix.Html.Safe',
          'Elixir.Phoenix.Html.Safe.Atom',
          'Elixir.Phoenix.Html.Safe.BitString',
          'Elixir.Phoenix.Html.Safe.Float','Elixir.Phoenix.Html.Safe.Integer',
          'Elixir.Phoenix.Html.Safe.List','Elixir.Phoenix.Html.Safe.Tuple',
          'Elixir.Phoenix.Naming','Elixir.Phoenix.Plugs',
          'Elixir.Phoenix.Plugs.Accepts','Elixir.Phoenix.Plugs.CodeReloader',
          'Elixir.Phoenix.Plugs.ContentTypeFetcher',
          'Elixir.Phoenix.Plugs.ControllerLogger',
          'Elixir.Phoenix.Plugs.ParamsFetcher',
          'Elixir.Phoenix.Plugs.Parsers.JSON',
          'Elixir.Phoenix.Plugs.Parsers.JSON.ParseError',
          'Elixir.Phoenix.Plugs.SessionFetcher','Elixir.Phoenix.Project',
          'Elixir.Phoenix.Router','Elixir.Phoenix.Router.ConsoleFormatter',
          'Elixir.Phoenix.Router.Errors','Elixir.Phoenix.Router.Mapper',
          'Elixir.Phoenix.Router.Options','Elixir.Phoenix.Router.Path',
          'Elixir.Phoenix.Router.ResourcesContext',
          'Elixir.Phoenix.Router.RouteHelper',
          'Elixir.Phoenix.Router.ScopeContext','Elixir.Phoenix.Router.Socket',
          'Elixir.Phoenix.Router.Stack','Elixir.Phoenix.Socket',
          'Elixir.Phoenix.Socket.Handler',
          'Elixir.Phoenix.Socket.Handler.InvalidReturn',
          'Elixir.Phoenix.Socket.Message',
          'Elixir.Phoenix.Socket.Message.InvalidMessage',
          'Elixir.Phoenix.Status','Elixir.Phoenix.Status.InvalidStatus',
          'Elixir.Phoenix.Supervisor','Elixir.Phoenix.Template',
          'Elixir.Phoenix.Template.Compiler',
          'Elixir.Phoenix.Template.EExEngine',
          'Elixir.Phoenix.Template.Engine',
          'Elixir.Phoenix.Template.UndefinedError','Elixir.Phoenix.Topic',
          'Elixir.Phoenix.Topic.GarbageCollector',
          'Elixir.Phoenix.Topic.Server','Elixir.Phoenix.Topic.Supervisor',
          'Elixir.Phoenix.View','Elixir.Phoenix.View.Helpers',
          'Elixir.Plug.Exception.Phoenix.Plugs.Parsers.JSON.ParseError']},
     {path,["$ROOT/lib/phoenix_jobs_four-0.0.2/ebin"]},
     {primLoad,
         ['Elixir.Crypto','Elixir.PhoenixJobsFour',
          'Elixir.PhoenixJobsFour.I18n',
          'Elixir.PhoenixJobsFour.JobController',
          'Elixir.PhoenixJobsFour.JobView','Elixir.PhoenixJobsFour.Jobs',
          'Elixir.PhoenixJobsFour.LayoutView',
          'Elixir.PhoenixJobsFour.PageController',
          'Elixir.PhoenixJobsFour.PageView','Elixir.PhoenixJobsFour.Queries',
          'Elixir.PhoenixJobsFour.Repo','Elixir.PhoenixJobsFour.Router',
          'Elixir.PhoenixJobsFour.Router.Helpers',
          'Elixir.PhoenixJobsFour.UserController',
          'Elixir.PhoenixJobsFour.UserView','Elixir.PhoenixJobsFour.Users',
          'Elixir.PhoenixJobsFour.Views']},
     {path,["$ROOT/lib/iex-1.1.0-dev/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.Autocomplete','Elixir.IEx.CLI',
          'Elixir.IEx.Config','Elixir.IEx.Evaluator','Elixir.IEx.Helpers',
          'Elixir.IEx.History','Elixir.IEx.Introspection','Elixir.IEx.Remsh',
          'Elixir.IEx.Server']},
     {path,["$ROOT/lib/sasl-2.4.1/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,overload,rb,
          rb_format_supp,release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,si,si_sasl_supp,systools,
          systools_lib,systools_make,systools_rc,systools_relup]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-3.0.3/ebin","$ROOT/lib/stdlib-2.2/ebin",
          "$ROOT/lib/compiler-5.0.2/ebin",
          "$ROOT/lib/syntax_tools-1.6.16/ebin","$ROOT/lib/poolboy-1.2.1/ebin",
          "$ROOT/lib/ranch-1.0.0/ebin","$ROOT/lib/crypto-3.4.1/ebin",
          "$ROOT/lib/cowlib-1.0.0/ebin","$ROOT/lib/elixir-1.1.0-dev/ebin",
          "$ROOT/lib/decimal-0.2.5/ebin","$ROOT/lib/linguist-0.1.2/ebin",
          "$ROOT/lib/poison-1.1.1/ebin","$ROOT/lib/cowboy-1.0.0/ebin",
          "$ROOT/lib/logger-1.1.0-dev/ebin","$ROOT/lib/postgrex-0.6.0/ebin",
          "$ROOT/lib/plug-0.7.0/ebin","$ROOT/lib/ecto-0.2.5/ebin",
          "$ROOT/lib/phoenix-0.4.1/ebin",
          "$ROOT/lib/phoenix_jobs_four-0.0.2/ebin",
          "$ROOT/lib/iex-1.1.0-dev/ebin","$ROOT/lib/sasl-2.4.1/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.0.3"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        error_handler,error_logger,file,file_server,
                        file_io_server,global,global_group,global_search,
                        group,heart,hipe_unified_loader,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,net,net_adm,net_kernel,os,ram_file,rpc,
                        user,user_drv,user_sup,disk_log,disk_log_1,
                        disk_log_server,disk_log_sup,dist_ac,erl_ddll,
                        erl_epmd,erts_debug,gen_tcp,gen_udp,gen_sctp,inet,
                        inet_db,inet_dns,inet_parse,inet_res,inet_tcp,
                        inet_udp,inet_sctp,pg2,seq_trace,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"2.2"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v8,dets_v9,dict,
                        digraph,digraph_utils,edlin,edlin_expand,epp,
                        eval_bits,erl_bits,erl_compile,erl_eval,
                        erl_expand_records,erl_internal,erl_lint,erl_parse,
                        erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
                        io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,maps,
                        math,ms_transform,orddict,ordsets,otp_internal,pg,
                        pool,proc_lib,proplists,qlc,qlc_pt,queue,random,re,
                        sets,shell,shell_default,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"5.0.2"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_bool,beam_bsm,
                        beam_clean,beam_dead,beam_dict,beam_disasm,
                        beam_except,beam_flatten,beam_jump,beam_listing,
                        beam_opcodes,beam_peep,beam_receive,beam_split,
                        beam_trim,beam_type,beam_utils,beam_validator,beam_z,
                        cerl,cerl_clauses,cerl_inline,cerl_trees,compile,
                        core_scan,core_lint,core_parse,core_pp,core_lib,
                        erl_bifs,rec_env,sys_core_dsetel,sys_core_fold,
                        sys_core_inline,sys_pre_attributes,sys_pre_expand,
                        v3_codegen,v3_core,v3_kernel,v3_kernel_pp,v3_life]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"1.6.16"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,erl_tidy,igor,
                        prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,poolboy,
                  [{description,"A hunky Erlang worker pool factory"},
                   {vsn,"1.2.1"},
                   {id,[]},
                   {modules,[poolboy,poolboy_sup,poolboy_worker]},
                   {registered,[poolboy]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_listener_sup,ranch_protocol,
                        ranch_server,ranch_ssl,ranch_sup,ranch_tcp,
                        ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"3.4.1"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,
                        cow_mimetypes,cow_multipart,cow_qs,cow_spdy]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.1.0-dev"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Access.Atom',
                        'Elixir.Access.HashDict','Elixir.Access.List',
                        'Elixir.Access.Map','Elixir.Agent',
                        'Elixir.Agent.Server','Elixir.Application',
                        'Elixir.ArgumentError','Elixir.ArithmeticError',
                        'Elixir.Atom','Elixir.BadArityError',
                        'Elixir.BadFunctionError','Elixir.BadStructError',
                        'Elixir.Base','Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.CaseClauseError','Elixir.Code',
                        'Elixir.Code.LoadError','Elixir.Collectable',
                        'Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.CompileError','Elixir.CondClauseError',
                        'Elixir.Dict','Elixir.Enum','Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
                        'Elixir.ErlangError','Elixir.Exception','Elixir.File',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.Stat','Elixir.File.Stream',
                        'Elixir.Float','Elixir.FunctionClauseError',
                        'Elixir.GenEvent','Elixir.GenEvent.Stream',
                        'Elixir.GenServer','Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
                        'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.Inspect',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Map','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
                        'Elixir.Inspect.Version.Requirement','Elixir.Integer',
                        'Elixir.Kernel','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.KeyError','Elixir.Keyword','Elixir.List',
                        'Elixir.List.Chars','Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.Macro',
                        'Elixir.Macro.Env','Elixir.Map','Elixir.MatchError',
                        'Elixir.Module','Elixir.Module.LocalsTracker',
                        'Elixir.Node','Elixir.OptionParser','Elixir.Path',
                        'Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol','Elixir.Protocol.UndefinedError',
                        'Elixir.Range','Elixir.Range.Iterator',
                        'Elixir.Range.Iterator.Integer','Elixir.Record',
                        'Elixir.Record.Extractor','Elixir.Regex',
                        'Elixir.Regex.CompileError','Elixir.RuntimeError',
                        'Elixir.Set','Elixir.Stream','Elixir.Stream.Reducers',
                        'Elixir.String','Elixir.String.Chars',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Graphemes','Elixir.String.Unicode',
                        'Elixir.StringIO','Elixir.Supervisor',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.SyntaxError','Elixir.System',
                        'Elixir.SystemLimitError','Elixir.Task',
                        'Elixir.Task.Supervised','Elixir.Task.Supervisor',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError','Elixir.Version',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Parser.DSL',
                        'Elixir.Version.Requirement',elixir,elixir_aliases,
                        elixir_bitstring,elixir_bootstrap,elixir_clauses,
                        elixir_code_server,elixir_compiler,elixir_counter,
                        elixir_def,elixir_def_defaults,elixir_def_overridable,
                        elixir_dispatch,elixir_env,elixir_errors,elixir_exp,
                        elixir_exp_clauses,elixir_fn,elixir_for,elixir_import,
                        elixir_interpolation,elixir_lexical,elixir_locals,
                        elixir_map,elixir_module,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_scope,elixir_sup,
                        elixir_tokenizer,elixir_translator,elixir_try,
                        elixir_utils]},
                   {registered,[elixir_code_server]},
                   {applications,[kernel,stdlib,compiler,syntax_tools,crypto]},
                   {included_applications,[]},
                   {env,[{uri,#{}},{ansi_enabled,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,decimal,
                  [{description,
                       "Arbitrary precision decimal arithmetic for Elixir.\n"},
                   {vsn,"0.2.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Decimal','Elixir.Decimal.Context',
                        'Elixir.Decimal.Error','Elixir.Inspect.Decimal',
                        'Elixir.String.Chars.Decimal']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,linguist,
                  [{description,"Elixir Internationalization library\n"},
                   {vsn,"0.1.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Linguist','Elixir.Linguist.Compiler',
                        'Elixir.Linguist.NoTranslationError',
                        'Elixir.Linguist.Vocabulary']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,poison,
                  [{description,"An experimental Elixir JSON library"},
                   {vsn,"1.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Poison','Elixir.Poison.Decode',
                        'Elixir.Poison.Decoder','Elixir.Poison.Decoder.Any',
                        'Elixir.Poison.Encode','Elixir.Poison.EncodeError',
                        'Elixir.Poison.Encoder','Elixir.Poison.Encoder.Any',
                        'Elixir.Poison.Encoder.Atom',
                        'Elixir.Poison.Encoder.BitString',
                        'Elixir.Poison.Encoder.Float',
                        'Elixir.Poison.Encoder.HashDict',
                        'Elixir.Poison.Encoder.HashSet',
                        'Elixir.Poison.Encoder.Integer',
                        'Elixir.Poison.Encoder.List',
                        'Elixir.Poison.Encoder.Map',
                        'Elixir.Poison.Encoder.Range',
                        'Elixir.Poison.Encoder.Stream','Elixir.Poison.Parser',
                        'Elixir.Poison.SyntaxError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modular HTTP server."},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_clock,
                        cowboy_handler,cowboy_http,cowboy_http_handler,
                        cowboy_loop_handler,cowboy_middleware,cowboy_protocol,
                        cowboy_req,cowboy_rest,cowboy_router,cowboy_spdy,
                        cowboy_static,cowboy_sub_protocol,cowboy_sup,
                        cowboy_websocket,cowboy_websocket_handler]},
                   {registered,[cowboy_clock,cowboy_sup]},
                   {applications,[kernel,stdlib,ranch,crypto,cowlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.1.0-dev"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.ErrorHandler',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.Supervisor',
                        'Elixir.Logger.Watcher']},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,
                       [{level,debug},
                        {utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {compile_time_purge_level,debug},
                        {discard_threshold_for_error_logger,500},
                        {console,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,postgrex,
                  [{description,"PostgreSQL driver for Elixir.\n"},
                   {vsn,"0.6.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Postgrex.BinaryUtils',
                        'Elixir.Postgrex.Connection','Elixir.Postgrex.Error',
                        'Elixir.Postgrex.Protocol',
                        'Elixir.Postgrex.Protocol.Messages',
                        'Elixir.Postgrex.Result','Elixir.Postgrex.TypeInfo',
                        'Elixir.Postgrex.Types']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,
                       "A specification and conveniences for composable modules in between web applications"},
                   {vsn,"0.7.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access.Plug.Conn.Unfetched','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Cowboy.Conn',
                        'Elixir.Plug.Adapters.Cowboy.Handler',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.Builder','Elixir.Plug.Conn',
                        'Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Unfetched',
                        'Elixir.Plug.Conn.Utils','Elixir.Plug.Exception',
                        'Elixir.Plug.Exception.Any',
                        'Elixir.Plug.Exception.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Exception.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.Head','Elixir.Plug.Logger',
                        'Elixir.Plug.MIME','Elixir.Plug.MessageVerifier',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.Session',
                        'Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static','Elixir.Plug.Test',
                        'Elixir.Plug.Upload']},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto,elixir,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecto,
                  [{description,
                       "Ecto is a domain specific language for writing queries and interacting with databases in Elixir.\n"},
                   {vsn,"0.2.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ecto.Adapter',
                        'Elixir.Ecto.Adapter.Migrations',
                        'Elixir.Ecto.Adapter.Storage',
                        'Elixir.Ecto.Adapter.TestTransactions',
                        'Elixir.Ecto.Adapter.Transactions',
                        'Elixir.Ecto.Adapters.Postgres',
                        'Elixir.Ecto.Adapters.Postgres.SQL',
                        'Elixir.Ecto.Adapters.Postgres.Worker',
                        'Elixir.Ecto.AssociationNotLoadedError',
                        'Elixir.Ecto.Associations',
                        'Elixir.Ecto.Associations.Assoc',
                        'Elixir.Ecto.Associations.BelongsTo',
                        'Elixir.Ecto.Associations.BelongsTo.Proxy',
                        'Elixir.Ecto.Associations.HasMany',
                        'Elixir.Ecto.Associations.HasMany.Proxy',
                        'Elixir.Ecto.Associations.HasOne',
                        'Elixir.Ecto.Associations.HasOne.Proxy',
                        'Elixir.Ecto.Associations.Preloader',
                        'Elixir.Ecto.Date','Elixir.Ecto.DateTime',
                        'Elixir.Ecto.Interval','Elixir.Ecto.InvalidModel',
                        'Elixir.Ecto.InvalidURL','Elixir.Ecto.Migration',
                        'Elixir.Ecto.MigrationError','Elixir.Ecto.Migrator',
                        'Elixir.Ecto.Model','Elixir.Ecto.Model.Schema',
                        'Elixir.Ecto.Model.Validations',
                        'Elixir.Ecto.NoPrimaryKey',
                        'Elixir.Ecto.NotSingleResult','Elixir.Ecto.Query',
                        'Elixir.Ecto.Query.API','Elixir.Ecto.Query.Builder',
                        'Elixir.Ecto.Query.Builder.Distinct',
                        'Elixir.Ecto.Query.Builder.From',
                        'Elixir.Ecto.Query.Builder.GroupBy',
                        'Elixir.Ecto.Query.Builder.Having',
                        'Elixir.Ecto.Query.Builder.Join',
                        'Elixir.Ecto.Query.Builder.LimitOffset',
                        'Elixir.Ecto.Query.Builder.Lock',
                        'Elixir.Ecto.Query.Builder.OrderBy',
                        'Elixir.Ecto.Query.Builder.Preload',
                        'Elixir.Ecto.Query.Builder.Select',
                        'Elixir.Ecto.Query.Builder.Where',
                        'Elixir.Ecto.Query.JoinExpr',
                        'Elixir.Ecto.Query.Normalizer',
                        'Elixir.Ecto.Query.QueryExpr',
                        'Elixir.Ecto.Query.TypeCheckError',
                        'Elixir.Ecto.Query.Typespec','Elixir.Ecto.Query.Util',
                        'Elixir.Ecto.Query.Validator',
                        'Elixir.Ecto.QueryError','Elixir.Ecto.Queryable',
                        'Elixir.Ecto.Queryable.Atom',
                        'Elixir.Ecto.Queryable.BitString',
                        'Elixir.Ecto.Queryable.Ecto.Query',
                        'Elixir.Ecto.Queryable.Tuple',
                        'Elixir.Ecto.Reflections.BelongsTo',
                        'Elixir.Ecto.Reflections.HasMany',
                        'Elixir.Ecto.Reflections.HasOne','Elixir.Ecto.Repo',
                        'Elixir.Ecto.Repo.Backend','Elixir.Ecto.Storage',
                        'Elixir.Ecto.Tagged','Elixir.Ecto.Time',
                        'Elixir.Ecto.Utils','Elixir.Ecto.Validator',
                        'Elixir.Ecto.Validator.Predicates',
                        'Elixir.Enumerable.Ecto.Associations.HasMany',
                        'Elixir.Inspect.Ecto.Associations.BelongsTo',
                        'Elixir.Inspect.Ecto.Associations.HasMany',
                        'Elixir.Inspect.Ecto.Associations.HasOne',
                        'Elixir.Mix.Tasks.Ecto',
                        'Elixir.Mix.Tasks.Ecto.Create',
                        'Elixir.Mix.Tasks.Ecto.Drop',
                        'Elixir.Mix.Tasks.Ecto.Gen.Migration',
                        'Elixir.Mix.Tasks.Ecto.Gen.Repo',
                        'Elixir.Mix.Tasks.Ecto.Migrate',
                        'Elixir.Mix.Tasks.Ecto.Rollback']},
                   {registered,[]},
                   {applications,[kernel,stdlib,poolboy,elixir,decimal]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix,
                  [{description,
                       "Elixir Web Framework targeting full-featured, fault tolerant applications\nwith realtime functionality\n"},
                   {vsn,"0.4.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access.Phoenix.Socket',
                        'Elixir.Mix.Tasks.Phoenix',
                        'Elixir.Mix.Tasks.Phoenix.New',
                        'Elixir.Mix.Tasks.Phoenix.Routes',
                        'Elixir.Mix.Tasks.Phoenix.Start','Elixir.Phoenix',
                        'Elixir.Phoenix.Adapters.Cowboy',
                        'Elixir.Phoenix.Channel',
                        'Elixir.Phoenix.CodeReloader','Elixir.Phoenix.Config',
                        'Elixir.Phoenix.Config.UndefinedConfigError',
                        'Elixir.Phoenix.Controller',
                        'Elixir.Phoenix.Controller.Action',
                        'Elixir.Phoenix.Controller.Connection',
                        'Elixir.Phoenix.Controller.ErrorController',
                        'Elixir.Phoenix.Controller.Errors',
                        'Elixir.Phoenix.Controller.Errors.UnfetchedContentType',
                        'Elixir.Phoenix.Controller.Flash',
                        'Elixir.Phoenix.Html','Elixir.Phoenix.Html.Engine',
                        'Elixir.Phoenix.Html.Safe',
                        'Elixir.Phoenix.Html.Safe.Atom',
                        'Elixir.Phoenix.Html.Safe.BitString',
                        'Elixir.Phoenix.Html.Safe.Float',
                        'Elixir.Phoenix.Html.Safe.Integer',
                        'Elixir.Phoenix.Html.Safe.List',
                        'Elixir.Phoenix.Html.Safe.Tuple',
                        'Elixir.Phoenix.Naming','Elixir.Phoenix.Plugs',
                        'Elixir.Phoenix.Plugs.Accepts',
                        'Elixir.Phoenix.Plugs.CodeReloader',
                        'Elixir.Phoenix.Plugs.ContentTypeFetcher',
                        'Elixir.Phoenix.Plugs.ControllerLogger',
                        'Elixir.Phoenix.Plugs.ParamsFetcher',
                        'Elixir.Phoenix.Plugs.Parsers.JSON',
                        'Elixir.Phoenix.Plugs.Parsers.JSON.ParseError',
                        'Elixir.Phoenix.Plugs.SessionFetcher',
                        'Elixir.Phoenix.Project','Elixir.Phoenix.Router',
                        'Elixir.Phoenix.Router.ConsoleFormatter',
                        'Elixir.Phoenix.Router.Errors',
                        'Elixir.Phoenix.Router.Mapper',
                        'Elixir.Phoenix.Router.Options',
                        'Elixir.Phoenix.Router.Path',
                        'Elixir.Phoenix.Router.ResourcesContext',
                        'Elixir.Phoenix.Router.RouteHelper',
                        'Elixir.Phoenix.Router.ScopeContext',
                        'Elixir.Phoenix.Router.Socket',
                        'Elixir.Phoenix.Router.Stack','Elixir.Phoenix.Socket',
                        'Elixir.Phoenix.Socket.Handler',
                        'Elixir.Phoenix.Socket.Handler.InvalidReturn',
                        'Elixir.Phoenix.Socket.Message',
                        'Elixir.Phoenix.Socket.Message.InvalidMessage',
                        'Elixir.Phoenix.Status',
                        'Elixir.Phoenix.Status.InvalidStatus',
                        'Elixir.Phoenix.Supervisor','Elixir.Phoenix.Template',
                        'Elixir.Phoenix.Template.Compiler',
                        'Elixir.Phoenix.Template.EExEngine',
                        'Elixir.Phoenix.Template.Engine',
                        'Elixir.Phoenix.Template.UndefinedError',
                        'Elixir.Phoenix.Topic',
                        'Elixir.Phoenix.Topic.GarbageCollector',
                        'Elixir.Phoenix.Topic.Server',
                        'Elixir.Phoenix.Topic.Supervisor',
                        'Elixir.Phoenix.View','Elixir.Phoenix.View.Helpers',
                        'Elixir.Plug.Exception.Phoenix.Plugs.Parsers.JSON.ParseError']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,linguist,poison,logger,plug]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_jobs_four,
                  [{description,"phoenix_jobs_four"},
                   {vsn,"0.0.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Crypto','Elixir.PhoenixJobsFour',
                        'Elixir.PhoenixJobsFour.I18n',
                        'Elixir.PhoenixJobsFour.JobController',
                        'Elixir.PhoenixJobsFour.JobView',
                        'Elixir.PhoenixJobsFour.Jobs',
                        'Elixir.PhoenixJobsFour.LayoutView',
                        'Elixir.PhoenixJobsFour.PageController',
                        'Elixir.PhoenixJobsFour.PageView',
                        'Elixir.PhoenixJobsFour.Queries',
                        'Elixir.PhoenixJobsFour.Repo',
                        'Elixir.PhoenixJobsFour.Router',
                        'Elixir.PhoenixJobsFour.Router.Helpers',
                        'Elixir.PhoenixJobsFour.UserController',
                        'Elixir.PhoenixJobsFour.UserView',
                        'Elixir.PhoenixJobsFour.Users',
                        'Elixir.PhoenixJobsFour.Views']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,cowboy,logger,postgrex,ecto,
                        phoenix]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.PhoenixJobsFour',[]}}]}]}},
     {apply,
         {application,load,
             [{application,iex,
                  [{description,"iex"},
                   {vsn,"1.1.0-dev"},
                   {id,[]},
                   {modules,
                       ['Elixir.IEx','Elixir.IEx.Autocomplete',
                        'Elixir.IEx.CLI','Elixir.IEx.Config',
                        'Elixir.IEx.Evaluator','Elixir.IEx.Helpers',
                        'Elixir.IEx.History','Elixir.IEx.Introspection',
                        'Elixir.IEx.Remsh','Elixir.IEx.Server']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,
                       [{after_spawn,[]},
                        {colors,[]},
                        {inspect,[]},
                        {history_size,20},
                        {default_prompt,<<"%prefix(%counter)>">>},
                        {alive_prompt,<<"%prefix(%node)%counter>">>}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"2.4.1"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,overload,
                        rb,rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,si,si_sasl_supp,systools,
                        systools_make,systools_rc,systools_relup,
                        systools_lib]},
                   {registered,
                       [sasl_sup,alarm_handler,overload,release_handler]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[{sasl_error_logger,tty},{errlog_type,all}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[syntax_tools,permanent]}},
     {apply,{application,start_boot,[poolboy,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[decimal,permanent]}},
     {apply,{application,start_boot,[linguist,permanent]}},
     {apply,{application,start_boot,[poison,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[postgrex,permanent]}},
     {apply,{application,start_boot,[plug,permanent]}},
     {apply,{application,start_boot,[ecto,permanent]}},
     {apply,{application,start_boot,[phoenix,permanent]}},
     {apply,{application,start_boot,[phoenix_jobs_four,permanent]}},
     {apply,{application,start_boot,[iex,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
